#!/bin/sh
# PX4 commands need the 'px4-' prefix in bash.
# (px4-alias.sh is expected to be in the PATH)
. px4-alias.sh

uorb start
muorb start

# Sleep a little here. A lot happens when the uorb and muorb start
# and we need to make sure that it all completes successfully to avoid
# any possible race conditions.
sleep 1

# Start logging immediately and use timestamps for log files when possible
# logger start -e -t
logger start -t

# IMU (accelerometer / gyroscope)
# Start this first because it gets the high rate interrupts coming in to the
# DSP. Without this the DSP will oversleep and miss critical timeouts.
# TODO: Why is that the case?
qshell icm42688p start -s

sleep 1

# Load in all of the parameters that have been saved in the file
param load

# We don't change the value of SYS_AUTOCONFIG but if it doesn't
# show up as used then it isn't reported to QGC and we get a
# missing parameter error.
param touch SYS_AUTOCONFIG

# Start all of the device drivers on DSP

# Magnetometer
qshell ist8310 start -R 10 -X -b 1

# LED driver for the Pixhawk 4 GPS module
qshell rgbled_ncp5623c start -X -b 1 -f 400 -a 56

# Barometer
qshell icp10100 start -I -b 5

# ESC driver
qshell modalai_esc start
qshell mixer load /dev/uart_esc quad_x.main.mix

# APM power monitor
qshell voxlpm start -X -b 2

# Pixhawk 4 GPS module
qshell gps start -d 7 -b 115200

# Spektrum RC receiver
qshell spektrum_rc start -d 8

sleep 1

# Start all of the processing modules on DSP

qshell sensors start
qshell ekf2 start
qshell mc_pos_control start
qshell mc_att_control start
qshell mc_rate_control start
qshell mc_hover_thrust_estimator start
qshell land_detector start multicopter

sleep 1

# Start all of the processing modules on the applications processor

rc_update start

dataman start

navigator start

commander start
commander mode manual

# This is needed for altitude and position hold modes
flight_mode_manager start

# Configure a primary mavlink instance for QGC communications
# Look for a file called qgc-ip.cfg containing a QGC IP address
# and, optionally, a port number
QGC_IP=`find-qgc-address`
QGC_PORT=`find-qgc-address -p`
if [ -z "$QGC_IP" ]; then
  echo "No QGC IP address found. Configuring Mavlink for broadcast"
  param set MAV_BROADCAST 1
  mavlink start -x -u 14557 -r 40000
else
  echo "Found QGC IP address $QGC_IP. Disabling Mavlink broadcast"
  param set MAV_BROADCAST 0
  mavlink start -x -u 14557 -r 40000 -t $QGC_IP -o $QGC_PORT
fi

# Configure a second mavlink instance for onboard messages (e.g. VIO and VOA)
mavlink start -u 14556 -t 127.0.0.1 -n lo -m custom

sleep 1

mavlink stream -u 14557 -s HIGHRES_IMU -r 5
mavlink stream -u 14557 -s ATTITUDE -r 5
mavlink stream -u 14557 -s RC_CHANNELS -r 20

sleep 1

# Start up the IMU server to support VIO
imu_server start

mavlink boot_complete
